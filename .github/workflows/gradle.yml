name: Java CI with Gradle

on:
  push:
    branches:
      - master
      - feature/*
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Cache gradle dependencies
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run gradle build
      run: ./gradlew build
      
  deploy: 
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Cache gradle dependencies
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Gradle build
      run: ./gradlew build
    - name: Create docker remote context
      run: docker context create remote --docker "host=ssh://${{ secrets.DEV_USER }}@${{ secrets.DEV_HOST }}"
    - name: Use remote context
      run: docker context use remote
    - name: Docker context ls and docker ps
      run: docker context ls && docker-compose ps
    - name: Docker build
      run: docker-compose build --log-level info
    - name: Docker compose deploy
      run: docker-compose up -d --log-level info
